import{_ as s,c as a,o as n,a as l}from"./app.c4aa1f4f.js";const d=JSON.parse('{"title":"git缩写命令","description":"","frontmatter":{},"headers":[{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"1.1 接下来我们生成第二个ssh key：","slug":"_1-1-接下来我们生成第二个ssh-key","link":"#_1-1-接下来我们生成第二个ssh-key","children":[]},{"level":3,"title":"1.2 打开ssh-agent","slug":"_1-2-打开ssh-agent","link":"#_1-2-打开ssh-agent","children":[]},{"level":3,"title":"1.3 添加私钥","slug":"_1-3-添加私钥","link":"#_1-3-添加私钥","children":[]},{"level":3,"title":"1.4 创建config文件","slug":"_1-4-创建config文件","link":"#_1-4-创建config文件","children":[]},{"level":3,"title":"1.5 测试","slug":"_1-5-测试","link":"#_1-5-测试","children":[]}]},{"level":2,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":2,"title":"关于用户名","slug":"关于用户名","link":"#关于用户名","children":[]}],"relativePath":"front/eng/git配置多个ssh.md","lastUpdated":1676190587000}'),p={name:"front/eng/git配置多个ssh.md"},e=l(`<h1 id="git缩写命令" tabindex="-1">git缩写命令 <a class="header-anchor" href="#git缩写命令" aria-hidden="true">#</a></h1><p>当有多个git账号时，比如：</p><p>一个github，国际认可的仓库,一个gitee码云，国内仓库，速度快 这两者如果邮箱不同的话，在生成第二个key的时候会覆盖第一个的key，导致一个用不了。</p><p>解决办法就是：生成两个（或多个）不同的公私密钥对，用config文件管理它们。</p><h2 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-hidden="true">#</a></h2><p>我们假设原来在<code>~/.ssh</code>目录下已经生成了一个密钥对：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">id_rsa</span></span>
<span class="line"><span style="color:#A6ACCD;">id_rsa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pub</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-1-接下来我们生成第二个ssh-key" tabindex="-1">1.1 接下来我们生成第二个ssh key： <a class="header-anchor" href="#_1-1-接下来我们生成第二个ssh-key" aria-hidden="true">#</a></h3><p><code>ssh-keygen -t rsa -C &quot;yourmail@gmail.com&quot;</code> 这里不要一路回车，我们自己手动填写保存路径：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Generating public</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">private rsa key pair</span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">Enter file </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> which to save the </span><span style="color:#82AAFF;">key</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Users</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Gary</span><span style="color:#89DDFF;">/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa): </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Users</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Gary</span><span style="color:#89DDFF;">/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa_github</span></span>
<span class="line"></span></code></pre></div><p>&lt;剩下两个直接回车&gt;,这里我们用<code>id_rsa_github</code>来区别原有密钥对，避免被覆盖。<br> 完成之后，我们可以看到<code>~/.ssh</code>目录下多了两个文件，变成：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">id_rsa</span></span>
<span class="line"><span style="color:#A6ACCD;">id_ras</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pub</span></span>
<span class="line"><span style="color:#A6ACCD;">id_rsa_github</span></span>
<span class="line"><span style="color:#A6ACCD;">id_rsa_github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pub</span></span>
<span class="line"><span style="color:#A6ACCD;">known_hosts</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-2-打开ssh-agent" tabindex="-1">1.2 打开ssh-agent <a class="header-anchor" href="#_1-2-打开ssh-agent" aria-hidden="true">#</a></h3><p>这里如果你用的github官方的bash，用：<code>ssh-agent -s</code><br> 如果是其他的，比如msysgit，用：<code>eval $(ssh-agent -s)</code> 略过这一步的话，下一步会提示这样的错误：<code>Could not open a connection to your authentication agent.</code></p><h3 id="_1-3-添加私钥" tabindex="-1">1.3 添加私钥 <a class="header-anchor" href="#_1-3-添加私钥" aria-hidden="true">#</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">add </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa</span></span>
<span class="line"><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">add </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa_github</span></span>
<span class="line"></span></code></pre></div><p>如果提示文件或目录不存在，就使用绝对地址。</p><h3 id="_1-4-创建config文件" tabindex="-1">1.4 创建config文件 <a class="header-anchor" href="#_1-4-创建config文件" aria-hidden="true">#</a></h3><p>在<code>~/.ssh</code>目录下创建名为config的文件。</p><p>添加一下内容：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"># gitee and github</span></span>
<span class="line"><span style="color:#A6ACCD;"># 注意：多个Host公用一个公钥时，</span></span>
<span class="line"><span style="color:#A6ACCD;"># 对应的HostName和Port必须跟在Host后面</span></span>
<span class="line"><span style="color:#A6ACCD;">    Host gitee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    HostName gitee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    Host github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    HostName github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#A6ACCD;">    IdentityFile </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># gerrit</span></span>
<span class="line"><span style="color:#A6ACCD;">    Host gerrit</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">awaimai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    HostName gerrit</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">awaimai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">    Port </span><span style="color:#F78C6C;">8000</span></span>
<span class="line"><span style="color:#A6ACCD;">    PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#A6ACCD;">    IdentityFile </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa_gerrit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 其他的统一用id_rsa文件登陆，或者密码。</span></span>
<span class="line"><span style="color:#A6ACCD;"># 注意：这里的第二行后面有个password，就是同时允许密码登陆</span></span>
<span class="line"><span style="color:#A6ACCD;"># 不然第一次没加公钥，密码也登陆不了，会提示错误：Permission </span><span style="color:#82AAFF;">denied</span><span style="color:#A6ACCD;"> (publickey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">password)</span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">    Host </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">    PreferredAuthentications publickey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">password</span></span>
<span class="line"><span style="color:#A6ACCD;">    IdentityFile </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa</span></span>
<span class="line"></span></code></pre></div><p>其中，Host和HostName填写git服务器的域名。</p><p>IdentityFile指定私钥的路径。</p><p>如果在Linux系统下提示错误：<code>Bad owner or permissions on /home/gary/.ssh/config</code></p><p>说明config权限过大，chmod命令调整：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$ chmod </span><span style="color:#F78C6C;">644</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">config</span></span>
<span class="line"></span></code></pre></div><p>然后在github和gitee码云上添加公钥即可，这里不再多说。</p><p>示例：<code>~/.ssh/config</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">PreferredAuthentications publickey</span></span>
<span class="line"><span style="color:#A6ACCD;">AddKeysToAgent yes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># gitee</span></span>
<span class="line"><span style="color:#A6ACCD;">Host gitee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">HostName gitee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">IdentityFile </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa_gitee</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># github</span></span>
<span class="line"><span style="color:#A6ACCD;">Host github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">Hostname github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">Port </span><span style="color:#F78C6C;">443</span></span>
<span class="line"><span style="color:#A6ACCD;">IdentityFile </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">ssh</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">id_rsa_github</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-5-测试" tabindex="-1">1.5 测试 <a class="header-anchor" href="#_1-5-测试" aria-hidden="true">#</a></h3><p>然后用ssh命令分别测试：<code>ssh -T git@github.com</code></p><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-hidden="true">#</a></h2><p>如果到这里你没有成功的话，别急，教你解决问题的终极办法--debug</p><p>比如测试<code>github：</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ssh </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">vT git@github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"></span></code></pre></div><p><code>-v</code> 是输出编译信息，然后根据编译信息自己去解决问题吧。</p><p>就我自己来说一般是config里的host那块写错了。</p><h2 id="关于用户名" tabindex="-1">关于用户名 <a class="header-anchor" href="#关于用户名" aria-hidden="true">#</a></h2><p>如果之前有设置全局用户名和邮箱的话，需要unset一下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">unset user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">unset user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email</span></span>
<span class="line"></span></code></pre></div><p>然后在不同的仓库下设置局部的用户名和邮箱</p><p>比如在公司的repository下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git config user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yourname</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">git config user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">youremail</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>在自己的github的仓库在执行刚刚的命令一遍即可。</p><p>这样就可以在不同的仓库，已不同的账号登录。</p>`,45),o=[e];function t(c,r,i,C,D,y){return n(),a("div",null,o)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
