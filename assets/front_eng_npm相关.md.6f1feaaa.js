import{_ as a,c as n,o as s,a as e}from"./app.c4aa1f4f.js";const m=JSON.parse('{"title":"npm相关","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、npm 和yarn比较","slug":"_1、npm-和yarn比较","link":"#_1、npm-和yarn比较","children":[]},{"level":2,"title":"2、区别","slug":"_2、区别","link":"#_2、区别","children":[]},{"level":2,"title":"3、删除npm包","slug":"_3、删除npm包","link":"#_3、删除npm包","children":[]},{"level":2,"title":"4、没权限问题","slug":"_4、没权限问题","link":"#_4、没权限问题","children":[]},{"level":2,"title":"5、发布工具包","slug":"_5、发布工具包","link":"#_5、发布工具包","children":[]}],"relativePath":"front/eng/npm相关.md","lastUpdated":1673417607000}'),p={name:"front/eng/npm相关.md"},l=e(`<h1 id="npm相关" tabindex="-1">npm相关 <a class="header-anchor" href="#npm相关" aria-hidden="true">#</a></h1><h2 id="_1、npm-和yarn比较" tabindex="-1">1、npm 和yarn比较 <a class="header-anchor" href="#_1、npm-和yarn比较" aria-hidden="true">#</a></h2><table><thead><tr><th>npm</th><th>yarn</th><th>用法</th></tr></thead><tbody><tr><td>npm install</td><td>yarn install</td><td>一键安装package.json的所有包</td></tr><tr><td>npm install XXX --save / -S</td><td>yarn add XXX</td><td>安装到dependencies</td></tr><tr><td>npm install XXX --save-dev/ -D</td><td>yarn add XXX --save-dev</td><td>安装到devDependencies</td></tr><tr><td>npm i XXX@[版本号]</td><td>yarn add XXX@[版本号]</td><td>指定版本号下载更新</td></tr><tr><td>npm install XXX --global</td><td>yarn global add XXX</td><td>全局安装某个包</td></tr><tr><td>npm update --global</td><td>yarn updade upgrade</td><td>更新所有包</td></tr><tr><td>npm uninstall XXX</td><td>yarn remove XXX</td><td>删除某个包</td></tr></tbody></table><h2 id="_2、区别" tabindex="-1">2、区别 <a class="header-anchor" href="#_2、区别" aria-hidden="true">#</a></h2><p>npm 缺点</p><ul><li>npm install 慢</li><li>同一个项目，安装的时候无法保持一致性</li></ul><p>package.json文件中版本号的特点:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5.0.3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">~5.0.3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^5.0.3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>5.0.3”表示安装指定的5.0.3版本，“～5.0.3”表示安装5.0.X中最新的版本，“^5.0.3”表示安装5.X.X中最新的版本。这就麻烦了，常常会出现同一个项目，有的同事是OK的，有的同事会由于安装的版本不一致出现bug</p><p>yarn 优点</p><p>速度快：<br> 并行安装无论 npm 还是 Yarn 在执行包的安装时，都会执行一系列任务。npm 是按照队列执行每个 package，也就是说必须要等到当前 package 安装完成之后，才能继续后面的安装。而 Yarn 是同步执行所有任务，提高了性能</p><p>离线模式： 如果之前已经安装过一个软件包，用Yarn再次安装时之间从缓存中获取，就不用像npm那样再从网络下载了。</p><p>安装版本统一：<br> 为了防止拉取到不同的版本，Yarn 有一个锁定文件 (lock file) 记录了被确切安装上的模块的版本号。每次只要新增了一个模块，Yarn 就 会创建（或更新）yarn.lock 这个文件。这么做就保证了，每一次拉取同一个项目依赖时，使用的都是一样的模块版本。 npm 其实也有办法实现处处使用相同版本的 packages，但需要开发者执行 npm shrinkwrap 命令。这个命令将会生成一个锁定文件，在执行 npm install 的时候，该锁定文件会先被读取，和 Yarn 读取 yarn.lock 文件一个道理。npm 和 Yarn 两者的不同之处在于，Yarn 默认会生成这样的锁定文件，而 npm 要通过 shrinkwrap 命令生成 npm-shrinkwrap.json 文件，只有当这个文件存在的时候，packages 版本信息才会被记录和更新。<br> 更简洁的输出：<br> npm 的输出信息比较冗长。在执行 npm install package 的时候，命令行里会不断地打印出所有被安装上的依赖。相比之下，Yarn 简洁太多：默认情况下，结合了 emoji直观且直接地打印出必要的信息，也提供了一些命令供开发者查询额外的安装信息。<br> 多注册来源处理：<br> 所有的依赖包，不管他被不同的库间接关联引用多少次，安装这个包时，只会从一个注册来源去装，要么是 npm 要么是 bower, 防止出现混乱不一致。<br> 更好的语义化：<br> yarn改变了一些npm命令的名称，比如 yarn add/remove，感觉上比 npm 原本的 install/uninstall 要更清晰。</p><h2 id="_3、删除npm包" tabindex="-1">3、删除npm包 <a class="header-anchor" href="#_3、删除npm包" aria-hidden="true">#</a></h2><p>npm不鼓励任何形式的删除，主要因为我们发布的包可能已经被其他人引用，如果我们删除了此包，其他人在重新安装含有我们包的依赖的工程时，出现找不到包问题。 基于此，npm做了相关的删除限制：</p><p>删除的版本24小时后方可重发! 包发布72小时之内才可删除!</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm unpublish taro</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">cui </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">force</span></span>
<span class="line"></span></code></pre></div><h2 id="_4、没权限问题" tabindex="-1">4、没权限问题 <a class="header-anchor" href="#_4、没权限问题" aria-hidden="true">#</a></h2><p><code>npm install Access Denied</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo chown </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">R </span><span style="color:#FFCB6B;">$USER</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">$GROUP </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">npm</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo chown </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">R </span><span style="color:#FFCB6B;">$USER</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">$GROUP </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">config</span></span>
<span class="line"></span></code></pre></div><p>OR</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo chown </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">R </span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(whoami) </span><span style="color:#89DDFF;">~/.</span><span style="color:#A6ACCD;">npm</span></span>
<span class="line"></span></code></pre></div><p>Anthoer</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">sudo npm install </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">unsafe</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">perm</span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">allow</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">root</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sudo npm cache clean </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">force </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">unsafe</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">perm</span></span>
<span class="line"></span></code></pre></div><p><a href="https://igniz87.hatenablog.com/entry/2019/07/10/130254" target="_blank" rel="noreferrer">npm权限问题</a></p><h2 id="_5、发布工具包" tabindex="-1">5、发布工具包 <a class="header-anchor" href="#_5、发布工具包" aria-hidden="true">#</a></h2><p><a href="https://www.codercto.com/a/77978.html" target="_blank" rel="noreferrer">webpack Library的打包</a><br><a href="https://github.com/krasimir/webpack-library-starter" target="_blank" rel="noreferrer">webpack-library-starter</a><br><a href="https://m.wang1314.com/doc/webapp/topic/14670647.html" target="_blank" rel="noreferrer">基于 Webpack 和 ES6 打造 JavaScript 类库</a></p>`,27),t=[l];function r(o,c,d,i,y,h){return s(),n("div",null,t)}const C=a(p,[["render",r]]);export{m as __pageData,C as default};
