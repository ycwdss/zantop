import{_ as s,c as a,o as n,a as l}from"./app.c4aa1f4f.js";const A=JSON.parse('{"title":"定时任务","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、编写定时任务","slug":"_1、编写定时任务","link":"#_1、编写定时任务","children":[]},{"level":2,"title":"2、定时任务类型","slug":"_2、定时任务类型","link":"#_2、定时任务类型","children":[]}],"relativePath":"end/node/定时任务.md","lastUpdated":1673364519000}'),p={name:"end/node/定时任务.md"},o=l(`<h1 id="定时任务" tabindex="-1">定时任务 <a class="header-anchor" href="#定时任务" aria-hidden="true">#</a></h1><h2 id="_1、编写定时任务" tabindex="-1">1、编写定时任务 <a class="header-anchor" href="#_1、编写定时任务" aria-hidden="true">#</a></h2><p>可以在 app/schedule 目录下创建一个 update_cache.js 文件。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Subscription </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">egg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Subscription</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UpdateCache</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Subscription</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 通过 schedule 属性来设置定时任务的执行间隔等配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">schedule</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      interval</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1m</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 1 分钟间隔</span></span>
<span class="line"><span style="color:#F07178;">      type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 指定所有的 worker 都需要执行</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// subscribe 是真正定时任务执行时被运行的函数</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">subscribe</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">curl</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://www.api.com/cache</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      dataType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cache</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> UpdateCache</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>也可以简写</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">schedule</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">interval</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1m</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1 分钟间隔</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 指定所有的 worker 都需要执行</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">task</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">curl</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://www.api.com/cache</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      dataType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cache</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="_2、定时任务类型" tabindex="-1">2、定时任务类型 <a class="header-anchor" href="#_2、定时任务类型" aria-hidden="true">#</a></h2><p><strong>1、interval 类型</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">schedule</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 每 10 秒执行一次</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">interval</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10s</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre></div><p>schedule.interval 参数来配置定时任务的执行时机，定时任务将会每间隔指定的时间执行一次.</p><ul><li>数字类型，单位为毫秒数，例如 5000。</li><li>字符类型，会通过 ms 转换成毫秒数，例如 5s。</li></ul><p><strong>2、cron 类型</strong></p><p>通过 <code>schedule.cron</code> 参数来配置定时任务的执行时机. cron 表达式通过 <a href="https://github.com/harrisiirak/cron-parser" target="_blank" rel="noreferrer">cron-parser</a> 进行解析。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">┬    ┬    ┬    ┬    ┬    ┬</span></span>
<span class="line"><span style="color:#A6ACCD;">│    │    │    │    │    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">│    │    │    │    │    └ day </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">week</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">) (</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> or </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> is Sun)</span></span>
<span class="line"><span style="color:#A6ACCD;">│    │    │    │    └───── </span><span style="color:#82AAFF;">month</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">│    │    │    └────────── day </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">month</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">31</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">│    │    └─────────────── </span><span style="color:#82AAFF;">hour</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">│    └──────────────────── </span><span style="color:#82AAFF;">minute</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">59</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">└───────────────────────── </span><span style="color:#82AAFF;">second</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">59</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> optional)</span></span>
<span class="line"></span></code></pre></div><p>示例：<br> 每 10 秒执行: _/10 _ * * * _<br> 每周一 10 点执行: 0 0 10 ? _ 1<br> 每月 1 号 10 点执行: 0 0 10 1 * ?<br><strong>示例：</strong></p><table><thead><tr><th>cron 表达式</th><th>含义</th></tr></thead><tbody><tr><td>_/5 _ * * * ?</td><td>每隔 5 秒触发一次</td></tr><tr><td>0 _/1 _ * * ?</td><td>每隔 1 分钟触发一次</td></tr><tr><td>0 0-5 14 * * ?</td><td>下午 2:00 到 2:05 期间每隔 1 分钟触发一次</td></tr><tr><td>0 0 10,14,16 * * ?</td><td>每天上午 10 点，下午 2 点，下午 4 点整触发一次</td></tr><tr><td>0 15 10 L * ?</td><td>每个月最后一天上午 10:15 触发一次</td></tr><tr><td>0 15 10 LW * ?</td><td>每个月最后一个工作日上午 10:15 触发一次</td></tr></tbody></table><p><strong>cron 语法格式：</strong></p><table><thead><tr><th></th><th>秒</th><th>分</th><th>小时</th><th>日期</th><th>月份</th><th>星期</th><th>年份</th></tr></thead><tbody><tr><td>格式 1</td><td>Seconds</td><td>Minutes</td><td>Hours</td><td>DayofMonth</td><td>Month</td><td>DayofWeek</td><td>Year</td></tr><tr><td>格式 2</td><td>Seconds</td><td>Minutes</td><td>Hours</td><td>DayofMonth</td><td>Month</td><td>DayofWeek</td><td></td></tr></tbody></table><p><strong>字段含义 ：</strong></p><table><thead><tr><th>字段</th><th>允许值</th><th>允许特殊符号</th></tr></thead><tbody><tr><td>秒(Seconds)</td><td>0 ～ 59</td><td>, - * /</td></tr><tr><td>分(Minutes)</td><td>0 ～ 59</td><td>, - * /</td></tr><tr><td>小时(Hours)</td><td>0 ～ 23</td><td>, - * /</td></tr><tr><td>日期(DayofMonth)</td><td>1 ～ 31，但需考虑当月实际天数</td><td>, - * ? / L W C</td></tr><tr><td>月份(Month)</td><td>1 ～ 12 或 JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC</td><td>, - * /</td></tr><tr><td>星期(DayofWeek)</td><td>1 ～ 7 或 SUN, MON, TUE, WED, THU, FRI, SAT (1 = SUN)</td><td>, - * ? / L C #</td></tr><tr><td>年(Year，可选)</td><td>1970 ～ 2099</td><td>, - * /</td></tr></tbody></table><p><strong>特殊符号：</strong></p><table><thead><tr><th>特殊符号</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>匹配该域的任意值，例如：Seconds 域表示每秒种，Minutes 域表示每分钟等 。</td></tr><tr><td>?</td><td>？只能用在日期(DayofMonth)和星期(DayofWeek)两个域。表示&quot;非明确的值&quot;，当表达式中一个指定值之后，为避免冲突，将另外一个互斥设为？。例如：想在每个月 1 号触发调度，不管 1 号是星期几，则只能使用如下：0 0 0 1 _ ?，其中最后一位只能使用？，不是使用_。</td></tr><tr><td>-</td><td>表示范围，例如：Minutes 域使用 5-20，表示从第 5 分钟到第 20 分钟，每分钟触发一次 。</td></tr><tr><td>/</td><td>表示增量，每隔增量的时间出发一次，例如：Minutes 域使用 5/20，表示从第 5 分钟开始，每隔 20 分钟触发一次，即 5，25，45 分别触发一次。</td></tr><tr><td>,</td><td>表示枚举值，例如：Minutes 域使用 5,20，表示在第 5 分钟和第 20 分钟分别触发一次。</td></tr><tr><td>#</td><td>#只能用在星期(DayofWeek)域。表示这个月第几个星期几。例如：6#3 or FRI#3，表示这个月的第 3 个星期五（6：周五，3：第 3 个）。如果指定日期不存在，则不会触发。</td></tr><tr><td>L</td><td>L 只能用在日期(DayofMonth)和星期(DayofWeek)两个域。是单词 Last 的缩写。 在日期(DayofMonth)域中，L 表示一个月的最后一天，即 1 月 31 号，4 月 30 号等。如果 L 前有数字，例如：6L，表示这个月倒数第 6 天。在星期(DayofWeek)域中，L 表示星期的最后一天，即 7 或者 SAT(星期六)。如果 L 前有数字，例如：FRIL，表示这个月的最后一个星期五。</td></tr><tr><td>W</td><td>W 只能用在日期(DayofMonth)域。表示指定日期最近的工作日。例如：15W，如果 15 号是周六，则任务在 14 号(星期五)触发。如果 15 号是周日，则任务在 16 号(星期一)触发。如果 15 号是工作日(星期一到星期五)，则任务 15 号(工作日当天)触发。注意：W 不能跨月，如果 1 号是星期六，任务则会在下个星期一（3 号）触发。W 只能配合单独数字使用，不能是范围或列表 。</td></tr><tr><td>LW</td><td>表示每个月的最后一个工作日。</td></tr><tr><td>C</td><td>C 只能用在日期(DayofMonth)和星期(DayofWeek)两个域。是单词 Calendar 的缩写，表示计划所关联的日期。在日期(DayofMonth)域中，5C 表示 5 日后的第一天，即 6 号。在星期(DayofWeek)域中，1C 表示星期日后的第一天 ，即星期一。</td></tr></tbody></table><p><strong>最后放大招了，在线生成器 <a href="http://cron.qqe2.com/" target="_blank" rel="noreferrer">点我点我啊</a></strong></p>`,23),t=[o];function e(r,c,y,D,F,C){return n(),a("div",null,t)}const i=s(p,[["render",e]]);export{A as __pageData,i as default};
